---
import Layout from "../../layouts/Layout.astro";
export const prerender = true;

const elements = [
    {
        title: "FP I DAI",
        text: "Formación profesional de grado medio de Desarrollo de Aplicaciones Informáticas. *no concluido",
        image: "",
        year: "2008 - 2009",
        type: "Formación",
    },
    {
        title: "StartUp Cofunder & CEO",
        text: "Desarrollo de plataforma interna, aplicaciones y web blog para StartUp Conet Mascotas",
        image: "",
        year: "2018 - 2020",
        type: "Experiencia",
    },
    {
        title: "Shopin App",
        text: "Desarrollo plataforma Hibrida en arquitectura monolitica con Nx + Angular + Ionic para StartUp",
        image: "",
        year: "2022",
        type: "Experiencia",
    },
    {
        title: "Frontend Developer Route",
        text: "Formación en Open Bootcamp de repaso y reciclaje de Javascript, HTML, CSS, Angular, React, Git...",
        image: "",
        year: "2022",
        type: "Formación",
    },
    {
        title: "Simonetta Floral",
        text: "Desarrollo web con Shopify para tienda online de ramos de flores preservadas",
        image: "",
        year: "2022...",
        type: "Experiencia",
    },
];

const timlineHeight = `${elements.length * 22}rem`;
---

<Layout title="CV Timeline">
    <div class="line-wrapper" style={`height: ${timlineHeight};`}>
        <div class="side left">
            {
                elements
                    .filter((f, i) => i % 2 === 0)
                    .map((el) => (
                        <div class="element">
                            <div class="content">
                                <div class="badges">
                                    <span
                                        class={
                                            el.type === "Formación"
                                                ? "formation"
                                                : "experience"
                                        }
                                    >
                                        {el.type}
                                    </span>
                                    <span>{el.year}</span>
                                </div>
                                <h4>{el.title}</h4>
                                <img src={el.image} alt="" />
                                <p>{el.text}</p>
                            </div>
                            <div class="conexion-wrapper">
                                <div class="conexion" />
                            </div>
                        </div>
                    ))
            }
        </div>
        <div class="line">
            <div class="line-end">continuará...</div>
        </div>
        <div class="side right">
            {
                elements
                    .filter((f, i) => i % 2 !== 0)
                    .map((el) => (
                        <div class="element">
                            <div class="conexion-wrapper">
                                <div class="conexion" />
                            </div>
                            <div class="content">
                                <div class="badges">
                                    <span
                                        class={
                                            el.type === "Formación"
                                                ? "formation"
                                                : "experience"
                                        }
                                    >
                                        {el.type}
                                    </span>
                                    <span>{el.year}</span>
                                </div>
                                <h4>{el.title}</h4>
                                <img src={el.image} alt="" />
                                <p>{el.text}</p>
                            </div>
                        </div>
                    ))
            }
        </div>
    </div>
</Layout>

<style lang="scss">
    @import "../../styles/global.scss";

    $margin: 3rem;
    $distance: 15rem;

    @media screen and (max-width: 600px) {
        
        $margin: 10rem;
        $distance: 15rem;

        div.line-wrapper {
            height: 140rem !important;
            .side {
                .element {
                    .content {
                        max-width: 30vw;

                        &:hover {
                            transform: scale(1.03);
                        }

                        .badges {
                            display: flex;
                            flex-direction: column;
                            gap: 0.3rem;
                            align-items: center;
                            width: 100%;
                            font-size: 14px;
                        }
                    }
                }
            }
        }
    }

    .line-wrapper {
        display: flex;
        justify-content: center;
        margin-top: 10vw;

        .side {
            z-index: 0;
            width: 50%;
            height: min-content;
            display: flex;
            flex-direction: column;
            margin-bottom: 0;

            .element {
                margin-top: $distance;
                // height: 10rem;
                width: 100%;

                display: flex;
                align-items: center;

                opacity: 0;

                animation: fade ease-in-out both;
                animation-timeline: view();

                .content {
                    width: max-content;

                    max-width: 300px;
                    height: 100%;
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;

                    padding: 1rem;

                    background-color: $background;
                    border-radius: $border-radius;

                    cursor: default;
                    box-shadow: 0px 0px 5px $secondary;

                    transition:
                        transform 0.3s ease-in-out,
                        box-shadow 0.3s ease-in-out;

                    div {
                        width: max-content;
                        margin-bottom: 1rem;
                        span {
                            border-radius: $border-radius;
                            background-color: $ts-pink;
                            padding: 0.2rem 0.5rem;
                            margin-right: 1rem;
                        }

                        span.formation {
                            background-color: $ts-yellow;
                        }

                        span.experience {
                            background-color: $ts-blue;
                        }
                    }
                }

                .content:hover {
                    transform: scale(1.1);
                    box-shadow: 0px 0px 10px $ts-green;
                }

                .conexion-wrapper {
                    height: 100%;
                    width: 100%;
                    display: flex;
                    align-items: center;
                }

                .conexion {
                    height: 5px;

                    animation: conect ease-in-out both;
                    animation-timeline: view();
                }
            }
        }

        .left {
            align-items: flex-start;
            margin-right: -1rem;
            .element {
                .conexion-wrapper {
                    justify-content: flex-start;

                    .conexion {
                        background: linear-gradient(
                            90deg,
                            $ts-blue,
                            $ts-pink 90%
                        );
                        border-radius: 0 $border-radius $border-radius 0;
                    }
                }
            }
        }

        .right {
            align-items: flex-end;
            margin-left: -1rem;

            .element {
                .conexion-wrapper {
                    justify-content: flex-end;
                    .conexion {
                        float: right;
                        background: linear-gradient(
                            90deg,
                            $ts-pink 10%,
                            $ts-blue
                        );
                        border-radius: $border-radius 0 0 $border-radius;
                    }
                }
            }
        }

        .side.right {
            margin-top: calc($distance * 0.75);
        }

        .line {
            z-index: 1;
            border-radius: 1rem;
            min-width: 30px;
            width: 30px;
            height: 30px;
            min-height: 30px;
            background-color: $ts-pink;

            display: flex;
            flex-direction: column-reverse;
            align-items: center;

            .line-end {
                width: 45px;
                height: 45px;
                background-color: $ts-pink;
                border-radius: 100%;

                font-weight: bold;

                display: flex;
                justify-content: center;
                align-items: center;

                animation: explode ease-in-out both;
                animation-timeline: scroll();
            }

            animation: reveal linear both;
            animation-timeline: scroll();
        }
    }

    @keyframes explode {
        from {
            width: 0px;
            height: 0px;
            color: transparent;
        }
        to {
            width: 45px;
            height: 45px;
            color: $background;
        }
        95% {
            width: 0px;
            height: 0px;
        }
        97% {
            width: 45px;
            height: 45px;
        }
        99% {
            color: transparent;
        }
        100% {
            width: 8rem;
            height: 8rem;
            color: $background;
        }
    }
    @keyframes reveal {
        from {
            height: 30px;
        }
        to {
            height: 95%;
        }
        0% {
            height: 30px;
        }
        95% {
            height: 95%;
        }
        100% {
            height: 95%;
        }
    }
    @keyframes fade {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
        20% {
            opacity: 0;
        }
        50% {
            opacity: 1;
        }
    }
    @keyframes conect {
        from {
            width: 0px;
        }
        to {
            width: 100%;
        }
        20% {
            width: 0px;
        }
        50% {
            width: 100%;
        }
    }
</style>
